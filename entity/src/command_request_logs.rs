//! SeaORM Entity. Generated by sea-orm-codegen 0.4.2

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel)]
#[sea_orm(table_name = "command_request_logs")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub message_id: String,
    pub topic: String,
    pub command: String,
    pub mode: String,
    pub body: String,
    pub created_at: DateTimeWithTimeZone,
    pub device_id: String,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::devices::Entity",
        from = "Column::DeviceId",
        to = "super::devices::Column::Id",
        on_update = "NoAction",
        on_delete = "Cascade"
    )]
    Devices,
    #[sea_orm(has_many = "super::command_response_logs::Entity")]
    CommandResponseLogs,
}

impl Related<super::devices::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Devices.def()
    }
}

impl Related<super::command_response_logs::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::CommandResponseLogs.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
