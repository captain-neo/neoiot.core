//! SeaORM Entity. Generated by sea-orm-codegen 0.6.0

pub use super::sea_orm_active_enums::DataType;
use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel)]
#[sea_orm(table_name = "fields")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub id: String,
    pub schema_id: String,
    pub identifier: String,
    pub data_type: DataType,
    pub comment: Option<String>,
    pub unit: Option<String>,
    pub created_at: DateTimeWithTimeZone,
    pub updated_at: Option<DateTimeWithTimeZone>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(
        belongs_to = "super::schemas::Entity",
        from = "Column::SchemaId",
        to = "super::schemas::Column::Id",
        on_update = "NoAction",
        on_delete = "Cascade"
    )]
    Schemas,
}

impl Related<super::schemas::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Schemas.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
